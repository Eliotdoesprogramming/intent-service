[project]
name = "intent-service"
version = "0.1.0"
description = "Intent classification service"
readme = "README.md"
requires-python = ">=3.10"

dependencies = [
    "fastapi>=0.68.0,<1.0.0",
    "pydantic>=2.4.2,<3.0.0",
    "mlflow==2.9.2",
    "polars>=0.20.0",
    "uvicorn>=0.15.0",
    "requests>=2.31.0",
    "python-multipart>=0.0.6",
    "httpx>=0.27.2",
    "torch>=2.5.1",
    "transformers>=4.46.3"
]

[dependency-groups]
dev = [
    "hatchling>=1.25.0",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.23.0",
    "setuptools>=75.6.0",
    "ruff>=0.3.0",
]
[tool.pytest.ini_options]
pythonpath = ["src"]
filterwarnings = [
    "ignore::pydantic.PydanticDeprecatedSince20",
    "ignore::FutureWarning:mlflow.*:",
    "ignore::FutureWarning:torch.*:"
]

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F", "I"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10
target-version = "py310"

[tool.ruff.per-file-ignores]
"src/api/endpoints.py" = ["E501"]  # Ignore line length violations in endpoints.py
"src/test_endpoints.py" = ["E501"]  # Ignore line length violations in test_endpoints.py
"src/test_ml.py" = ["E501"]  # Ignore line length violations in test_ml.py


[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.isort]
known-first-party = ["api", "ml", "schema"]

